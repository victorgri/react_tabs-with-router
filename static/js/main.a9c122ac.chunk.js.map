{"version":3,"sources":["store/TabsContext.tsx","components/Tabs/Tabs.tsx","App.tsx","index.tsx"],"names":["TabsContext","createContext","undefined","TabsProvider","children","Provider","value","tabs","id","title","content","Tabs","tabId","useParams","context","useContext","Error","useTabs","selectedTabId","find","tab","className","map","cn","to","getLinkClass","isActive","classNames","App","ReactDOM","render","path","element","index","document","getElementById"],"mappings":"sOAOMA,EAAcC,6BAA4CC,GAMnDC,EAA4C,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAO1D,OACE,cAACJ,EAAYK,SAAb,CAAsBC,MAAO,CAAEC,KAPpB,CACX,CAAEC,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,eACxC,CAAEF,GAAI,QAASC,MAAO,QAASC,QAAS,iBAIxC,SAAwCN,GAE3C,ECnBYO,EAAO,WAAO,IAAD,IAChBC,EAAUC,cAAVD,MACAL,EDmBa,WACrB,IAAMO,EAAUC,qBAAWf,GAE3B,QAAgBE,IAAZY,EACF,MAAM,IAAIE,MAAM,8CAGlB,OAAOF,CACR,CC3BkBG,GAATV,KACFW,GAAgB,UAAAX,EAAKY,MAAK,SAACC,GAAD,OAASA,EAAIZ,KAAOI,CAApB,WAAV,eAAsCJ,KAAM,KAElE,OACE,qCACE,qBAAKa,UAAU,gBAAf,SACE,6BACGd,EAAKe,KAAI,SAACF,GACT,IAAQZ,EAAcY,EAAdZ,GAAIC,EAAUW,EAAVX,MAEZ,OACE,oBAEE,UAAQ,MACRY,UAAWE,IAAG,CAAE,YAAaL,IAAkBE,EAAIZ,KAHrD,SAKE,cAAC,IAAD,CAAM,UAAQ,UAAUgB,GAAE,gBAAWhB,GAArC,SACGC,KALED,EASV,QAIL,qBAAKa,UAAU,QAAQ,UAAQ,aAA/B,SACGH,EAAa,UACVX,EAAKY,MAAK,SAACC,GAAD,OAASA,EAAIZ,KAAOU,CAApB,WADA,aACV,EAA8CR,QAC9C,0BAIX,EC/BKe,G,kBACF,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAAyCC,IAAW,cAAe,CACnE,YAAaD,GADb,GAISE,EAAM,WACjB,OACE,qCACE,qBACEP,UAAU,oDACV,UAAQ,MAFV,SAIE,qBAAKA,UAAU,YAAf,SACE,sBAAKA,UAAU,eAAf,UACE,cAAC,IAAD,CAASG,GAAG,IAAIH,UAAWI,EAA3B,kBAGA,cAAC,IAAD,CAASD,GAAG,QAAQH,UAAWI,EAA/B,yBAON,qBAAKJ,UAAU,UAAf,SACE,qBAAKA,UAAU,YAAf,SACE,cAAC,IAAD,UAKT,EC7BDQ,IAASC,OACP,cAAC,IAAD,UACE,cAAC,EAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,IAAzB,UACE,cAAC,IAAD,CAAOC,OAAK,EAACD,QAAS,oBAAIX,UAAU,QAAd,yBACtB,cAAC,IAAD,CAAOU,KAAK,OAAOC,QAAS,cAAC,IAAD,CAAUR,GAAG,SACzC,eAAC,IAAD,CAAOO,KAAK,OAAZ,UACE,cAAC,IAAD,CACEE,OAAK,EACLD,QACE,qCACE,oBAAIX,UAAU,QAAd,uBACA,cAAC,EAAD,SAIN,cAAC,IAAD,CACEU,KAAK,SACLC,QACE,qCACE,oBAAIX,UAAU,QAAd,uBACA,cAAC,EAAD,YAKR,cAAC,IAAD,CAAOU,KAAK,IAAIC,QAAS,oBAAIX,UAAU,QAAd,uCAKjCa,SAASC,eAAe,Q","file":"static/js/main.a9c122ac.chunk.js","sourcesContent":["import React, { createContext, useContext, ReactNode } from 'react';\nimport { Tab } from '../types/Tab';\n\ninterface TabsContextProps {\n  tabs: Tab[];\n}\n\nconst TabsContext = createContext<TabsContextProps | undefined>(undefined);\n\ninterface TabsProviderProps {\n  children: ReactNode;\n}\n\nexport const TabsProvider: React.FC<TabsProviderProps> = ({ children }) => {\n  const tabs = [\n    { id: 'tab-1', title: 'Tab 1', content: 'Some text 1' },\n    { id: 'tab-2', title: 'Tab 2', content: 'Some text 2' },\n    { id: 'tab-3', title: 'Tab 3', content: 'Some text 3' },\n  ];\n\n  return (\n    <TabsContext.Provider value={{ tabs }}>{children}</TabsContext.Provider>\n  );\n};\n\nexport const useTabs = () => {\n  const context = useContext(TabsContext);\n\n  if (context === undefined) {\n    throw new Error('useTabs must be used within a TabsProvider');\n  }\n\n  return context;\n};\n","import { Link, useParams } from 'react-router-dom';\nimport cn from 'classnames';\nimport { useTabs } from '../../store/TabsContext';\n\nexport const Tabs = () => {\n  const { tabId } = useParams();\n  const { tabs } = useTabs();\n  const selectedTabId = tabs.find((tab) => tab.id === tabId)?.id || null;\n\n  return (\n    <>\n      <div className=\"tabs is-boxed\">\n        <ul>\n          {tabs.map((tab) => {\n            const { id, title } = tab;\n\n            return (\n              <li\n                key={id}\n                data-cy=\"Tab\"\n                className={cn({ 'is-active': selectedTabId === tab.id })}\n              >\n                <Link data-cy=\"TabLink\" to={`/tabs/${id}`}>\n                  {title}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n\n      <div className=\"block\" data-cy=\"TabContent\">\n        {selectedTabId\n          ? tabs.find((tab) => tab.id === selectedTabId)?.content\n          : 'Please select a tab'}\n      </div>\n    </>\n  );\n};\n","import classNames from 'classnames';\nimport { Outlet, NavLink } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport './App.scss';\n\nconst getLinkClass\n  = ({ isActive }: { isActive: boolean }) => classNames('navbar-item', {\n    'is-active': isActive,\n  });\n\nexport const App = () => {\n  return (\n    <>\n      <nav\n        className=\"navbar is-light is-fixed-top is-mobile has-shadow\"\n        data-cy=\"Nav\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink to=\"/\" className={getLinkClass}>\n              Home\n            </NavLink>\n            <NavLink to=\"/tabs\" className={getLinkClass}>\n              Tabs\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n\n      <div className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport {\n  HashRouter, Routes, Route, Navigate,\n} from 'react-router-dom';\nimport { Tabs } from './components/Tabs/Tabs';\n\nimport { App } from './App';\nimport { TabsProvider } from './store/TabsContext';\n\nReactDOM.render(\n  <HashRouter>\n    <TabsProvider>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<h1 className=\"title\">Home page</h1>} />\n          <Route path=\"home\" element={<Navigate to=\"..\" />} />\n          <Route path=\"tabs\">\n            <Route\n              index\n              element={(\n                <>\n                  <h1 className=\"title\">Tabs page</h1>\n                  <Tabs />\n                </>\n              )}\n            />\n            <Route\n              path=\":tabId\"\n              element={(\n                <>\n                  <h1 className=\"title\">Tabs page</h1>\n                  <Tabs />\n                </>\n              )}\n            />\n          </Route>\n          <Route path=\"*\" element={<h1 className=\"title\">Page not found</h1>} />\n        </Route>\n      </Routes>\n    </TabsProvider>\n  </HashRouter>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}